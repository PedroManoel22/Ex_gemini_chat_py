import random

def get_valid_guess():
    """Pede um palpite vÃ¡lido ao usuÃ¡rio e o retorna como um inteiro."""
    while True:
        try:
            guess_str = input('Estou pensando em um nÃºmero de 0 a 10, tente adivinhar: ')
            guess_int = int(guess_str)
            
            if 0 <= guess_int <= 10:
                return guess_int
            else:
                print('Por favor, digite um nÃºmero entre 0 e 10.')
        
        except ValueError:
            print('Por favor, digite um nÃºmero inteiro!')

def play_game():
    """LÃ³gica principal do jogo de adivinhaÃ§Ã£o."""
    num_computador = random.randint(0, 10)
    
    # DicionÃ¡rio para gerenciar a pontuaÃ§Ã£o de forma mais limpa
    pontuacoes = {1: 100, 2: 70, 3: 50, 4: 30, 5: 10}
    max_tentativas = 5
    
    print(f'O computador pensou em um nÃºmero. VocÃª tem {max_tentativas} tentativas.')
    
    for tentativa in range(1, max_tentativas + 2):
        if tentativa > max_tentativas:
            print('\nVocÃª nÃ£o acertou desta vez. Suas tentativas acabaram.')
            print(f'O nÃºmero que pensei foi {num_computador}.')
            return
            
        print(f'\n{tentativa}Âª tentativa:')
        
        palpite = get_valid_guess()
        
        if palpite == num_computador:
            pontos = pontuacoes.get(tentativa, 0)
            print(f'\nParabÃ©ns! VocÃª acertou na {tentativa}Âª tentativa.')
            print(f'Sua pontuaÃ§Ã£o foi de {pontos} pontos.')
            return

def main():
    """FunÃ§Ã£o principal que gerencia o fluxo do jogo."""
    while True:
        play_game()
        
        opcao = input('\nDeseja jogar novamente? [S/N]: ').upper().strip()
        if opcao != 'S':
            break

    print('\nObrigado por jogar! Volte sempre! ğŸ‘‹')

if __name__ == '__main__':
    main()
     