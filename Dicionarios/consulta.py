# Exerc√≠cio 3: Consulta de Caminho em Dicion√°rio Aninhado üó∫Ô∏è
# Desenvolva uma fun√ß√£o que receba um dicion√°rio aninhado e uma lista de chaves representando um "caminho". 
# A fun√ß√£o deve retornar o valor encontrado no final desse caminho. Se qualquer parte do caminho n√£o existir, a fun√ß√£o deve retornar None.

# Dica: Itere sobre o caminho e trate os casos onde uma chave n√£o √© encontrada ou o valor n√£o √© um dicion√°rio.

# Exemplo:

# Python

# dados = {
#     'a': {
#         'b': {
#             'c': 10,
#             'd': 20
#         },
#         'e': 30
#     },
#     'f': 40
# }
# caminho1 = ['a', 'b', 'c']
# caminho2 = ['a', 'e']
# caminho3 = ['a', 'z', 'x'] # Caminho inexistente
# caminho4 = ['f', 'g'] # 'f' n√£o √© um dicion√°rio

# Sa√≠da esperada:
# para caminho1: 10
# para caminho2: 30
# para caminho3: None
# para caminho4: None